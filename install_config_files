#!/usr/bin/env bash

RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

function print_with_color() {
  color=$1
  string=$2
  printf "${color}$string${NC}\n"
}

function link_file() {
  source_file=$1
  destination=$2

  print_with_color $GREEN "linking $destination"
  ln "$source_file" "$destination"
}

function check_and_link_file() {
  source_file=$1
  destination=$2
  if [[ -f $destination ]]; then
    print_with_color $YELLOW "$destination already exists. Do you want to override it? (yes/no)"
    read yn
    case $yn in
      yes )
        rm "$destination"
        link_file "$source_file" "$destination"
        ;;
      * ) print_with_color $GREEN 'skipping...';;
    esac
  else
    link_file "$source_file" "$destination"
  fi
}

function write_bash_profile() {
  print_with_color $GREEN "writing $HOME/.bash_profile"
  echo ". `pwd`/bash/bash_config" > $HOME/.bash_profile
  . $HOME/.bash_profile
}

function sublime_path() {
  local sublime=$1
  echo "$HOME/Library/Application Support/$sublime"
}

function sublime_pref_path() {
  local sublime=$1
  echo "$(sublime_path "$sublime")/Packages/User/Preferences.sublime-settings"
}

function sublime_key_binding_path() {
  local sublime=$1
  echo "$(sublime_path "$sublime")/Packages/User/Default (OSX).sublime-keymap"
}

function sublime_package_control_path() {
 local sublime=$1
  echo "$(sublime_path "$sublime")/Installed Packages/Package Control.sublime-package"
}

function check_and_link_sublime() {
  local st=$1
  if [[ -d $(sublime_path "$st") ]]; then
    check_and_link_file 'sublime/Preferences.sublime-settings' "$(sublime_pref_path "$st")"
    check_and_link_file 'sublime/key_bindings.json' "$(sublime_key_binding_path "$st")"
  fi
}

function install_sublime_packages() {
  local st=$1
  if [[ -d $(sublime_path "$st") ]]; then
    print_with_color $GREEN 'Installing Package Control'
    wget https://packagecontrol.io/Package%20Control.sublime-package -O "$(sublime_package_control_path "$st")".
  fi
}

#################### GIT SETUP ####################
check_and_link_file git/git_config $HOME/.gitconfig
check_and_link_file git/git_ignore $HOME/.gitignore

if ! [ -f `brew --prefix`/etc/bash_completion ]; then
  print_with_color $GREEN "Git bash_completion not installed. Do you want to install it? (yes/no)"
  read yn
  case $yn in
    yes ) brew install git bash-completion;;
    * ) print_with_color $GREEN 'skipping...';;
  esac
fi

################## BASH PROFILE ##################
if [ -f $HOME/.bash_profile ]; then
  print_with_color $YELLOW "$HOME/.bash_profile already exists. Do you want to override it? (yes/no)"
  read yn
  case $yn in
    yes ) write_bash_profile;;
    * ) print_with_color $GREEN 'skipping...';;
  esac
else
  write_bash_profile
fi

############ SUBLIME SETUP ############
check_and_link_sublime 'Sublime Text'
check_and_link_sublime 'Sublime Text 2'
check_and_link_sublime 'Sublime Text 3'

print_with_color $YELLOW 'Do you want to install Sublime Packages? (yes/no)'
read yn
case $yn in
  yes )
    install_sublime_packages 'Sublime Text'
    install_sublime_packages 'Sublime Text 2'
    install_sublime_packages 'Sublime Text 3'
    ;;
  * ) print_with_color $GREEN 'skipping...'
esac

# TODO
# install wget
# export GOPATH=$HOME/code/go
# export PATH=$PATH:$GOPATH/bin
